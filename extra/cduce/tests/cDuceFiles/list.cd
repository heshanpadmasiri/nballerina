type BSignedInt = (Int, `pos | `neg)
type BInt = (`int, BSignedInt)
type BString = String
type BBoolean = Bool
type BDecimal = (`decimal, (BSignedInt, BSignedInt))
type BFloat = (`float, BSignedInt)
type BError = (`error, Any)
type BTop = BAny | BError
type BList = [BTop*]
type BNull = `null
type BAny = BBoolean | BDecimal | BFloat | BInt | BList | BNull | BString

type T1 = [BInt]
type T2 = [BInt BString]
type T3 = [BInt BInt BInt*]
type T4 = [BInt BString BInt*]
type T5 = [BInt BString BString*]
type T6 = [BAny]
type T7 = [BInt BAny]
type T8 = [BInt BAny*]
type T9 = [BAny*]
type T10 = [BInt*]
type A1 = [BInt*]
type A2 = [BString*]
type A3 = [BAny*]
type A4 = [BInt BInt]
type A5 = [[BInt BInt] [BInt BInt]]
type T11 = [[BInt BInt] [BInt BInt]]
