type BSignedInt = (Int, `pos | `neg)
type BInt = (`int, BSignedInt)
type BBoolean = Bool
type BDecimal = (`decimal, (BSignedInt, BSignedInt))
type BFloat = (`float, BSignedInt)
type BList = [BTop*]
type BNull = `null
type BString = String
type BAny = BBoolean | BDecimal | BFloat | BInt | BList | BNull | BString
type BError = (`error, Any)
type BTop = BAny | BError

type notInt = BTop\BInt
type newInt = BInt | BNull & BTop\BNull
type myInt = BInt
